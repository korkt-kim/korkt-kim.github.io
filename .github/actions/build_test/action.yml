name: 'Build and Test'
descriptioin: 'This is a Build/Test Github action'
inputs:
  node-version-file:
    description: 'Node version file'
    required: true
  NEXT_PUBLIC_SANITY_STUDIO_URL:
    description: 'Sanity Studio URL'
    required: true
  NEXT_PUBLIC_BASE_URL:
    description: 'Base URL'
    required: true
  NEXT_PUBLIC_SANITY_DATASET:
    description: 'Sanity Dataset'
    required: true
  NEXT_PUBLIC_SANITY_PROJECT_ID:
    description: 'Sanity Project ID'
    required: true
  NEXT_PUBLIC_SANITY_ADMIN_TOKEN:
    description: 'Sanity Admin Token'
    required: true
  NEXT_PUBLIC_SANITY_USER_TOKEN:
    description: 'Sanity User Token'
    required: true
  NEXT_PUBLIC_SANITY_REVALIDATE_SECRET:
    description: 'Sanity Revalidate Secret'
    required: true
  NEXT_PUBLIC_SANITY_API_VERSION:
    description: 'Sanity API Version'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Setup Node.js environment
      uses: actions/setup-node@v3
      with:
        node-version-file: ${{ inputs.node-version-file }}

    - name: Install PNPM
      run: npm i -g pnpm@8.5.1
      shell: bash

    - name: Generate Environment Variables File for Production
      run: |
        echo "NEXT_PUBLIC_SANITY_STUDIO_URL=${{ inputs.NEXT_PUBLIC_SANITY_STUDIO_URL }}" >> .env.production
        echo "NEXT_PUBLIC_BASE_URL=${{ inputs.NEXT_PUBLIC_BASE_URL }}" >> .env.production
        echo "NEXT_PUBLIC_SANITY_DATASET=${{ inputs.NEXT_PUBLIC_SANITY_DATASET }}" >> .env.production
        echo "NEXT_PUBLIC_SANITY_PROJECT_ID=${{ inputs.NEXT_PUBLIC_SANITY_PROJECT_ID }}" >> .env.production
        echo "NEXT_PUBLIC_SANITY_ADMIN_TOKEN=${{ inputs.NEXT_PUBLIC_SANITY_ADMIN_TOKEN }}" >> .env.production
        echo "NEXT_PUBLIC_SANITY_USER_TOKEN=${{ inputs.NEXT_PUBLIC_SANITY_USER_TOKEN }}" >> .env.production
        echo "NEXT_PUBLIC_SANITY_REVALIDATE_SECRET=${{ inputs.NEXT_PUBLIC_SANITY_REVALIDATE_SECRET }}" >> .env.production
        echo "NEXT_PUBLIC_SANITY_API_VERSION=${{ inputs.NEXT_PUBLIC_SANITY_API_VERSION }}" >> .env.production
      working-directory: ./apps/blog
      shell: bash

    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: ~/.pnpm-store
        key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-

    - name: Install dependencies
      run: pnpm install
      shell: bash

    - name: Test
      run: pnpm turbo test
      shell: bash

    - name: Build
      run: pnpm turbo build
      shell: bash
